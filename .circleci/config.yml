version: 2.1

orbs:
  codacy: codacy/base@2.4.1

references:
  circleci_job: &circleci_job
    docker:
      - image: circleci/circleci-cli:0.1.5879
    working_directory: ~/workdir

jobs:
  publish_circleci_artifacts:
    machine: true
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/
      - store_artifacts:
          path: ~/workdir/artifacts/

  pack_and_validate:
    <<: *circleci_job
    steps:
      - attach_workspace:
          at: ~/workdir
      - run:
          name: Pack orb
          command: |
            echo "" >> orbs/examples/codacy-coverage-report.yml
            echo "  orbs:" >> orbs/examples/codacy-coverage-report.yml
            echo "    coverage-reporter: codacy/coverage-reporter@$(cat .version)" >> orbs/examples/codacy-coverage-report.yml
            circleci config pack orbs > orb.yml
      - run:
          name: Validate orb
          command: circleci orb validate orb.yml
      - persist_to_workspace:
          root: ~/workdir
          paths:
            - "orb.yml"

  publish_dev:
    <<: *circleci_job
    steps:
      - attach_workspace:
          at: ~/workdir
      - deploy:
          name: Publish orb as dev (deleted after 90 days)
          command: circleci orb publish orb.yml codacy/coverage-reporter@dev:$(cat .version) --token $CIRCLE_TOKEN

  publish_prod:
    <<: *circleci_job
    steps:
      - attach_workspace:
          at: ~/workdir
      - deploy:
          name: Publish final orb
          command: circleci orb publish orb.yml codacy/coverage-reporter@$(cat .version) --token $CIRCLE_TOKEN

  package_artifacts:
    docker:
      - image: hairyhenderson/upx:latest
    working_directory: ~/workdir
    steps:
      - run: apk add ca-certificates
      - attach_workspace:
          at: ~/workdir
      - run: |
          upx --lzma -o codacy-coverage-reporter-compressed ~/workdir/target/graalvm-native-image/codacy-coverage-reporter
          mkdir -p ~/workdir/artifacts/
          mv ~/workdir/target/codacy-coverage-reporter-assembly-$(cat .version).jar ~/workdir/artifacts/
          mv ~/workdir/codacy-coverage-reporter-compressed ~/workdir/artifacts/codacy-coverage-reporter-linux-$(cat .version)

workflows:
  version: 2
  compile_test_deploy:
    jobs:
      - codacy/checkout_and_version:
          write_sbt_version: true
      - pack_and_validate:
          context: CodacyCircleCI
          requires:
            - codacy/checkout_and_version
      - codacy/sbt:
          name: populate_cache
          cmd: sbt ";set scalafmtUseIvy in ThisBuild := false;update"
          requires:
            - codacy/checkout_and_version
      - codacy/sbt:
          name: check_fmt
          cmd: sbt ";scalafmt::test;test:scalafmt::test;sbt:scalafmt::test"
          requires:
            - populate_cache
      - codacy/sbt:
          name: compile
          cmd: sbt compile
          requires:
            - check_fmt
      - codacy/sbt:
          name: test_and_coverage
          cmd: |
            if [ -z ${CODACY_PROJECT_TOKEN+x} ]; then
              echo "CODACY_PROJECT_TOKEN not found. Skipping send coverage to Codacy."
              sbt test
            else
              sbt ";clean;coverage;test;coverageReport;coverageAggregate;codacyCoverage"
            fi
          requires:
            - compile
      - codacy/sbt:
          name: create_artifacts
          cmd: |
            sbt assembly
            sbt graalvm-native-image:packageBin
          persist_to_workspace: true
          requires:
            - test_and_coverage
      - package_artifacts:
          requires:
            - create_artifacts
      - publish_circleci_artifacts:
          requires:
            - package_artifacts
          filters:
            branches:
              only:
                - master
      #TODO: Add bintray orb
      - codacy/shell:
          name: publish_bintray
          cmd: |
            curl -T ~/workdir/artifacts/codacy-coverage-reporter-linux-$(cat .version) -ucodacy-ci:$BINTRAY_API_KEY -H "X-Bintray-Package:codacy-coverage-reporter" -H "X-Bintray-Version:$(cat .version)" https://api.bintray.com/content/codacy/Binaries/$(cat .version)/codacy-coverage-reporter-linux
            curl -T ~/workdir/artifacts/codacy-coverage-reporter-assembly-$(cat .version).jar -ucodacy-ci:$BINTRAY_API_KEY -H "X-Bintray-Package:codacy-coverage-reporter" -H "X-Bintray-Version:$(cat .version)" https://api.bintray.com/content/codacy/Binaries/$(cat .version)/codacy-coverage-reporter-assembly.jar
            curl -X POST -ucodacy-ci:$BINTRAY_API_KEY https://api.bintray.com/content/codacy/Binaries/codacy-coverage-reporter/$(cat .version)/publish
          filters:
            branches:
              only:
                - master
          context: CodacyBintray
          requires:
            - package_artifacts
      - codacy/publish_ghr:
          name: publish_ghr
          path: ~/workdir/artifacts/
          context: CodacyGitHub
          filters:
            branches:
              only:
                - master
          requires:
            - package_artifacts
      - publish_dev:
          context: CodacyCircleCI
          requires:
            - publish_ghr
            - pack_and_validate
          filters:
            branches:
              ignore:
              - master
      - publish_prod:
          context: CodacyCircleCI
          requires:
            - publish_ghr
            - pack_and_validate
          filters:
            branches:
              only:
                - master
