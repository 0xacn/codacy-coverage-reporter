# CircleCI 2.0 configuration file
version: 2

# Re-usable blocks to reduce boilerplate in job definitions.
references:

  sbt_jvm_defaults: &sbt_jvm_defaults
    JAVA_OPTS: -Xmx3g

  default_sbt_job: &default_sbt_job
    machine: true
    working_directory: ~/workdir
    environment:
      <<: *sbt_jvm_defaults

  restore_sbt_cache: &restore_sbt_cache
    restore_cache:
      keys:
        - sbt-cache-{{ .Branch }}-{{ checksum "build.sbt" }}-{{ .Environment.CIRCLE_SHA1 }}
        - sbt-cache-{{ .Branch }}-{{ checksum "build.sbt" }}
        - sbt-cache-{{ .Branch }}
        - sbt-cache

  clean_sbt_cache: &clean_sbt_cache
    run:
      name: CleanCache
      command: |
        find $HOME/.sbt -name "*.lock" | xargs rm | true
        find $HOME/.ivy2 -name "ivydata-*.properties" | xargs rm | true

  save_sbt_cache: &save_sbt_cache
    save_cache:
      key: sbt-cache-{{ .Branch }}-{{ checksum "build.sbt" }}-{{ .Environment.CIRCLE_SHA1 }}
      paths:
        - "~/.ivy2/cache"
        - "~/.sbt"
        - "~/.m2"

jobs:

  trigger_test:
    <<: *default_sbt_job
    steps:
      - checkout
      - *restore_sbt_cache
      - run:
          name: Test
          command: sbt test

  checkout_and_version:
    docker:
      - image: codacy/git-version:latest
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: Set version
          command: /bin/git-version > .version
      - run:
          name: Set Sbt version
          command: echo "version in ThisBuild := \"$(cat .version)\"" > version.sbt
      - run:
          name: Current version
          command: cat .version
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir/*

  checkfmt:
    <<: *default_sbt_job
    steps:
      - attach_workspace:
          at: ~/
      - *restore_sbt_cache
      - run:
          name: Check formatting
          command: sbt ";scalafmt::test;test:scalafmt::test;sbt:scalafmt::test"
      - *clean_sbt_cache
      - *save_sbt_cache

  populate_cache:
    <<: *default_sbt_job
    steps:
      - attach_workspace:
          at: ~/
      - *restore_sbt_cache
      - run:
          name: Safely populate caches
          command: sbt ";set scalafmtUseIvy in ThisBuild := false;update"
      - *clean_sbt_cache
      - *save_sbt_cache

  compile_and_test:
    <<: *default_sbt_job
    steps:
      - attach_workspace:
          at: ~/
      - *restore_sbt_cache
      - run:
          name: Coverage
          command: |
            sbt clean compile coverage test coverageReport coverageAggregate codacyCoverage
      - *clean_sbt_cache
      - *save_sbt_cache

  publish_lib:
    <<: *default_sbt_job
    steps:
      - attach_workspace:
          at: ~/
      - *restore_sbt_cache
      - run:
          name: Publish the library
          command: |
            sbt ";clean;retrieveGPGKeys"
            sbt ";+publishSigned;sonatypeReleaseAll"
      - *clean_sbt_cache
      - *save_sbt_cache

  publish_binary:
    <<: *default_sbt_job
    steps:
      - attach_workspace:
          at: ~/
      - *restore_sbt_cache
      - run:
          name: Publish the library
          command: |
            ./scripts/publish-native.sh -n codacy-coverage-reporter -m com.codacy.CodacyCoverageReporter -t docker $(cat .version)

            mkdir -p /tmp/binary
            cp ~/workdir/codacy-coverage-reporter-linux-$(cat .version) /tmp/binary/codacy-coverage-reporter-linux
            curl -fL https://getcli.jfrog.io | sh
            ./jfrog bt config --interactive=false --user codacy-ci --key $BINTRAY_API_KEY
            ./jfrog bt upload --user codacy-ci --key $BINTRAY_API_KEY --publish /tmp/binary codacy/Binaries/codacy-coverage-reporter/$(cat .version) codacy-coverage-reporter-linux

            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete $(cat .version) ~/workdir/codacy-coverage-reporter-linux-$(cat .version)
      - *clean_sbt_cache
      - *save_sbt_cache

workflows:
  version: 2

  compile_deploy:
    jobs:
      - checkout_and_version:
          context: CodacyAWS
      - populate_cache:
          context: CodacyAWS
          requires:
            - checkout_and_version
      - checkfmt:
          context: CodacyAWS
          requires:
            - populate_cache
      - compile_and_test:
          context: CodacyAWS
          requires:
            - populate_cache
      - publish_lib:
          filters:
            branches:
              only:
                - master
                - native-binary
          context: CodacyAWS
          requires:
            - compile_and_test
            - checkfmt
      - publish_binary:
          filters:
            branches:
              only:
                - master
                - native-binary
          context: CodacyAWS
          requires:
            - compile_and_test
            - checkfmt
